apiVersion: v1
kind: Service
metadata:
  labels:
    app: nebula-storaged
  name: neubla-storaged
  annotations:
    service.alpha.kubernetes.io/tolerate-unready-endpoints: "true"  
spec:
  publishNotReadyAddresses: true
  clusterIP: None
  ports:
  - name: thrift
    port: 45500
  - name: raft
    port: 45501
  - name: http
    port: 12000
  - name: http2
    port: 12002
  selector:
    app: nebula-storaged
---
apiVersion: policy/v1beta1
kind: PodDisruptionBudget
metadata:
  name: nebula-budget
  labels:
    app: nebula
spec:
  selector:
    matchLabels:
      app: nebula-storaged
      app: nebula-metad
  maxUnavailable: 1
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: nebula-storaged
  labels:
    app: nebula-storaged
spec:
  serviceName: nebula-storaged
  replicas: 3
  selector:
    matchLabels:
      app: nebula-storaged
  template:
    metadata:
      labels:
        app: nebula-storaged
    spec:
#      hostNetwork: true
      dnsPolicy: ClusterFirstWithHostNet
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - nebula-storaged
              topologyKey: kubernetes.io/hostname
      terminationGracePeriodSeconds: 60
      containers:
      - name: nebula-storaged
        image: vesoft/nebula-storaged:nightly
        imagePullPolicy: Always
        ports:
        - containerPort: 44500
          name: thrift
        - containerPort: 44501
          name: raft
        - containerPort: 12000
          name: http
        - containerPort: 12002
          name: http2     
        command: 
          - "/bin/bash"
          - "-ecx"
          - "exec /usr/local/nebula/bin/nebula-storaged --flagfile=/usr/local/nebula/etc/nebula-storaged.conf --daemonize=false --local_ip=$(hostname -i) --meta_server_addrs=$(META_SERVER_ADDRS) --ws_ip=0.0.0.0" 
        env:
        - name: META_SERVER_ADDRS
          valueFrom:
            configMapKeyRef:
              name: nebula-config
              key: meta_server_addrs          
        livenessProbe:
          httpGet:
            path: /status
            port: 12000
          initialDelaySeconds: 30
          timeoutSeconds: 5          
        volumeMounts:
        - name: data
          mountPath: /usr/local/nebula/data/
      volumes:
      - name: data
        persistentVolumeClaim:
          claimName: data
  podManagementPolicy: Parallel
  updateStrategy:
    type: RollingUpdate
  volumeClaimTemplates:
  - metadata:
      name: data
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 100Gi
