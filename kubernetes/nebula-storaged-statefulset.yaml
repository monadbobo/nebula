apiVersion: v1
kind: Service
metadata:
  labels:
    app: nebula
  name: neubla-storaged
spec:
  clusterIP: None
  ports:
  - name: thrift
    port: 45500
  - name: raft
    port: 45501
  - name: http
    port: 12000
  - name: http2
    port: 12002
  selector:
    app: nebula
---
apiVersion: policy/v1beta1
kind: PodDisruptionBudget
metadata:
  name: nebula-budget
  labels:
    app: nebula
spec:
  selector:
    matchLabels:
      app: nebula-storaged
      app: nebula-metad
  maxUnavailable: 1
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: nebula-storaged
  labels:
    app: nebula
spec:
  serviceName: nebula-storaged
  replicas: 3
  selector:
    matchLabels:
      app: nebula
  template:
    metadata:
      labels:
        app: nebula
    spec:
      terminationGracePeriodSeconds: 60
      containers:
      - name: nebula-storaged
        image: vesoft/nebula-storaged:nightly
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 44500
          name: thrift
        - containerPort: 44501
          name: raft
        - containerPort: 12000
          name: http
        - containerPort: 12002
          name: http2     
        command: 
          - "/bin/bash"
          - "-ecx"
          - "exec /usr/local/nebula/bin/nebula-storaged --flagfile=/usr/local/nebula/etc/nebula-storaged.conf --daemonize=false --local_ip=$(hostname -i) --meta_server_addrs=10.1.0.204:45500 --ws_ip=0.0.0.0" 
        volumeMounts:
        - name: data
          mountPath: /root/nebula-graph/data/storage
      volumes:
      - name: data
        persistentVolumeClaim:
          claimName: data
  updateStrategy:
    type: RollingUpdate
  volumeClaimTemplates:
  - metadata:
      name: data
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 100Gi