apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: nebula-graphd
  name: nebula-graphd
spec:
  selector:
    matchLabels:
      app: nebula-graphd
  replicas: 3
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate  
  template:
    metadata:
      labels:
        app: nebula-graphd
    spec:
      dnsPolicy: ClusterFirstWithHostNet
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - nebula-graphd
              topologyKey: kubernetes.io/hostname    
      containers:
      - name: nebula-graphd
        image: vesoft/nebula-graphd:nightly
        imagePullPolicy: Always
        ports:
        - name: thrift
          containerPort: 3699
        - name: http
          containerPort: 13000
        - name: http2
          containerPort: 13002
        command: ["/usr/local/nebula/bin/nebula-graphd", "--flagfile=/usr/local/nebula/etc/nebula-graphd.conf", "--daemonize=false", "--meta_server_addrs=$(META_SERVER_ADDRS)" , "--ws_ip=0.0.0.0"]
        env:
        - name: META_SERVER_ADDRS
          valueFrom:
            configMapKeyRef:
              name: nebula-config
              key: meta_server_addrs        
        livenessProbe:
          httpGet:
            path: /status
            port: 13000
          initialDelaySeconds: 30
          timeoutSeconds: 5
        resources:
          limits:
            memory: "1Gi"
            cpu: "1"
